Java
C
C++
Haskell
Assembly
Basic (MSX, GW, Q(uick) e Visual)
Pascal
C#
Lua
AspectJ
Clipper

posso mencioná-las mostrnado vários Hello Worlds.

Problemas das linguagens atuais (para os problemas que elas se propõem a resolver)

Referências:
http://steve-yegge.blogspot.com.br/2007/02/next-big-language.html
http://www.streamhead.com/what-programming-language-to-learn-next/
http://lambda-the-ultimate.org/node/1277/

Olhar os artigos do PLATEAU


Por que falar sobre "próximas" cinco linguagens?  Não é um exercício em
futurologia!!!! (posso, neste ponto, mostrar uma grande lista de linguagens (ou
trechos de código em várias linguagens) pouquíssimo conhecidas. Não quero "chutar" 
qual vai ser a melhor ou qual vai dar certo.

- Multicore?
  - Erlang! Scala?

- Web (precisamos de algo diferente para a Web?????)
  - Dart!

- Dispositivos móveis

- Barreira de entrada (as linguagens usadas para se apresentar programação não
ajudam!)
  - A regra do Hello World (se tiver mais que uma linha, esqueça!)
  - Python!
  - Fácil, legível e multiparadigma. Usa tipificação dinâmica, o que significa que a produtividade, pelo menos para construir aplicações simples, é maior. 

- Código de baixo nível? 
 - Desenvolvimento de jogos? 
 - Go? D? ==> Ambas também são úteis para multicore!
 - C? 
   Coisas boas: controle quase total sobre a máquina. Gerenciamento de memória manual, extremamente eficiente, manipulação de ponteiros, implementações para todas as plataformas do universo
   Coisas ruins: gerenciamento de memória manual, manipulação de ponteiros, ausência de suporte decente a paralelismo, tipificação fraca


Não são as únicas 5 linguagens!!! Você pode perfeitamente estudar outras, mas
essas fornecem uma visão abrangente e tocam em pontos importantes.